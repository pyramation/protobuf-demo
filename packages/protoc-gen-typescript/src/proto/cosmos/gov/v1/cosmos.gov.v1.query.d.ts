// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace cosmos.gov.v1 {

    // QueryProposalRequest is the request type for the Query/Proposal RPC method.
    export interface QueryProposalRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
    }

    // QueryProposalResponse is the response type for the Query/Proposal RPC method.
    export interface QueryProposalResponse {
        proposal?: Proposal;
    }

    // QueryProposalsRequest is the request type for the Query/Proposals RPC method.
    export interface QueryProposalsRequest {
        // proposal_status defines the status of the proposals.
        proposal_status?: ProposalStatus;
        // voter defines the voter address for the proposals.
        voter?: string;
        // depositor defines the deposit addresses from the proposals.
        depositor?: string;
        // pagination defines an optional pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryProposalsResponse is the response type for the Query/Proposals RPC
    // method.
    export interface QueryProposalsResponse {
        proposals?: Array<Proposal>;
        // pagination defines the pagination in the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryVoteRequest is the request type for the Query/Vote RPC method.
    export interface QueryVoteRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
        // voter defines the oter address for the proposals.
        voter?: string;
    }

    // QueryVoteResponse is the response type for the Query/Vote RPC method.
    export interface QueryVoteResponse {
        // vote defined the queried vote.
        vote?: Vote;
    }

    // QueryVotesRequest is the request type for the Query/Votes RPC method.
    export interface QueryVotesRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
        // pagination defines an optional pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryVotesResponse is the response type for the Query/Votes RPC method.
    export interface QueryVotesResponse {
        // votes defined the queried votes.
        votes?: Array<Vote>;
        // pagination defines the pagination in the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryParamsRequest is the request type for the Query/Params RPC method.
    export interface QueryParamsRequest {
        // params_type defines which parameters to query for, can be one of "voting",
        // "tallying" or "deposit".
        params_type?: string;
    }

    // QueryParamsResponse is the response type for the Query/Params RPC method.
    export interface QueryParamsResponse {
        // voting_params defines the parameters related to voting.
        voting_params?: VotingParams;
        // deposit_params defines the parameters related to deposit.
        deposit_params?: DepositParams;
        // tally_params defines the parameters related to tally.
        tally_params?: TallyParams;
    }

    // QueryDepositRequest is the request type for the Query/Deposit RPC method.
    export interface QueryDepositRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
        // depositor defines the deposit addresses from the proposals.
        depositor?: string;
    }

    // QueryDepositResponse is the response type for the Query/Deposit RPC method.
    export interface QueryDepositResponse {
        // deposit defines the requested deposit.
        deposit?: Deposit;
    }

    // QueryDepositsRequest is the request type for the Query/Deposits RPC method.
    export interface QueryDepositsRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
        // pagination defines an optional pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryDepositsResponse is the response type for the Query/Deposits RPC method.
    export interface QueryDepositsResponse {
        deposits?: Array<Deposit>;
        // pagination defines the pagination in the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryTallyResultRequest is the request type for the Query/Tally RPC method.
    export interface QueryTallyResultRequest {
        // proposal_id defines the unique id of the proposal.
        proposal_id?: number;
    }

    // QueryTallyResultResponse is the response type for the Query/Tally RPC method.
    export interface QueryTallyResultResponse {
        // tally defines the requested tally.
        tally?: TallyResult;
    }

    export interface QueryService {
        Proposal: (r:QueryProposalRequest) => QueryProposalResponse;
        Proposals: (r:QueryProposalsRequest) => QueryProposalsResponse;
        Vote: (r:QueryVoteRequest) => QueryVoteResponse;
        Votes: (r:QueryVotesRequest) => QueryVotesResponse;
        Params: (r:QueryParamsRequest) => QueryParamsResponse;
        Deposit: (r:QueryDepositRequest) => QueryDepositResponse;
        Deposits: (r:QueryDepositsRequest) => QueryDepositsResponse;
        TallyResult: (r:QueryTallyResultRequest) => QueryTallyResultResponse;
    }
}

