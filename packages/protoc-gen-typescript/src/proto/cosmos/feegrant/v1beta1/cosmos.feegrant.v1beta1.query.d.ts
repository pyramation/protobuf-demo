// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace cosmos.feegrant.v1beta1 {

    // QueryAllowanceRequest is the request type for the Query/Allowance RPC method.
    export interface QueryAllowanceRequest {
        // granter is the address of the user granting an allowance of their funds.
        granter?: string;
        // grantee is the address of the user being granted an allowance of another user's funds.
        grantee?: string;
    }

    // QueryAllowanceResponse is the response type for the Query/Allowance RPC method.
    export interface QueryAllowanceResponse {
        // allowance is a allowance granted for grantee by granter.
        allowance?: Grant;
    }

    // QueryAllowancesRequest is the request type for the Query/Allowances RPC method.
    export interface QueryAllowancesRequest {
        grantee?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryAllowancesResponse is the response type for the Query/Allowances RPC method.
    export interface QueryAllowancesResponse {
        // allowances are allowance's granted for grantee by granter.
        allowances?: Array<Grant>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryAllowancesByGranterRequest is the request type for the Query/AllowancesByGranter RPC method.
    export interface QueryAllowancesByGranterRequest {
        granter?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.
    export interface QueryAllowancesByGranterResponse {
        // allowances that have been issued by the granter.
        allowances?: Array<Grant>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface QueryService {
        Allowance: (r:QueryAllowanceRequest) => QueryAllowanceResponse;
        Allowances: (r:QueryAllowancesRequest) => QueryAllowancesResponse;
        AllowancesByGranter: (r:QueryAllowancesByGranterRequest) => QueryAllowancesByGranterResponse;
    }
}

