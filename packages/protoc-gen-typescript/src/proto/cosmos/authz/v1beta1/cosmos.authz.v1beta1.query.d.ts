// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace cosmos.authz.v1beta1 {

    // QueryGrantsRequest is the request type for the Query/Grants RPC method.
    export interface QueryGrantsRequest {
        granter?: string;
        grantee?: string;
        // Optional, msg_type_url, when set, will query only grants matching given msg type.
        msg_type_url?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
    export interface QueryGrantsResponse {
        // authorizations is a list of grants granted for grantee by granter.
        grants?: Array<Grant>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method.
    export interface QueryGranterGrantsRequest {
        granter?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
    export interface QueryGranterGrantsResponse {
        // grants is a list of grants granted by the granter.
        grants?: Array<GrantAuthorization>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    // QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method.
    export interface QueryGranteeGrantsRequest {
        grantee?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    // QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
    export interface QueryGranteeGrantsResponse {
        // grants is a list of grants granted to the grantee.
        grants?: Array<GrantAuthorization>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface QueryService {
        Grants: (r:QueryGrantsRequest) => QueryGrantsResponse;
        GranterGrants: (r:QueryGranterGrantsRequest) => QueryGranterGrantsResponse;
        GranteeGrants: (r:QueryGranteeGrantsRequest) => QueryGranteeGrantsResponse;
    }
}

