// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace cosmos.base.abci.v1beta1 {

    // TxResponse defines a structure containing relevant tx data and metadata. The
    // tags are stringified and the log is JSON decoded.
    export interface TxResponse {
        // The block height
        height?: number;
        // The transaction hash.
        txhash?: string;
        // Namespace for the Code
        codespace?: string;
        // Response code.
        code?: number;
        // Result bytes, if any.
        data?: string;
        // The output of the application's logger (raw string). May be
        // non-deterministic.
        raw_log?: string;
        // The output of the application's logger (typed). May be non-deterministic.
        logs?: Array<ABCIMessageLog>;
        // Additional information. May be non-deterministic.
        info?: string;
        // Amount of gas requested for transaction.
        gas_wanted?: number;
        // Amount of gas consumed by transaction.
        gas_used?: number;
        // The request transaction bytes.
        tx?: google.protobuf.Any;
        // Time of the previous block. For heights > 1, it's the weighted median of
        // the timestamps of the valid votes in the block.LastCommit. For height == 1,
        // it's genesis time.
        timestamp?: string;
        // Events defines all the events emitted by processing a transaction. Note,
        // these events include those emitted by processing all the messages and those
        // emitted from the ante handler. Whereas Logs contains the events, with
        // additional metadata, emitted only by processing the messages.
        //
        // Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
        events?: Array<tendermint.abci.Event>;
    }

    // ABCIMessageLog defines a structure containing an indexed tx ABCI message log.
    export interface ABCIMessageLog {
        msg_index?: number;
        log?: string;
        // Events contains a slice of Event objects that were emitted during some
        // execution.
        events?: Array<StringEvent>;
    }

    // StringEvent defines en Event object wrapper where all the attributes
    // contain key/value pairs that are strings instead of raw bytes.
    export interface StringEvent {
        type?: string;
        attributes?: Array<Attribute>;
    }

    // Attribute defines an attribute wrapper where the key and value are
    // strings instead of raw bytes.
    export interface Attribute {
        key?: string;
        value?: string;
    }

    // GasInfo defines tx execution gas context.
    export interface GasInfo {
        // GasWanted is the maximum units of work we allow this tx to perform.
        gas_wanted?: number;
        // GasUsed is the amount of gas actually consumed.
        gas_used?: number;
    }

    // Result is the union of ResponseFormat and ResponseCheckTx.
    export interface Result {
        // Data is any data returned from message or handler execution. It MUST be
        // length prefixed in order to separate data from multiple message executions.
        // Deprecated. This field is still populated, but prefer msg_response instead
        // because it also contains the Msg response typeURL.
        data?: Uint8Array;
        // Log contains the log information from message or handler execution.
        log?: string;
        // Events contains a slice of Event objects that were emitted during message
        // or handler execution.
        events?: Array<tendermint.abci.Event>;
        // msg_responses contains the Msg handler responses type packed in Anys.
        //
        // Since: cosmos-sdk 0.46
        msg_responses?: Array<google.protobuf.Any>;
    }

    // SimulationResponse defines the response generated when a transaction is
    // successfully simulated.
    export interface SimulationResponse {
        gas_info?: GasInfo;
        result?: Result;
    }

    // MsgData defines the data returned in a Result object during message
    // execution.
    export interface MsgData {
        msg_type?: string;
        data?: Uint8Array;
    }

    // TxMsgData defines a list of MsgData. A transaction will have a MsgData object
    // for each message.
    export interface TxMsgData {
        // data field is deprecated and not populated.
        data?: Array<MsgData>;
        // msg_responses contains the Msg handler responses packed into Anys.
        //
        // Since: cosmos-sdk 0.46
        msg_responses?: Array<google.protobuf.Any>;
    }

    // SearchTxsResult defines a structure for querying txs pageable
    export interface SearchTxsResult {
        // Count of all txs
        total_count?: number;
        // Count of txs in current page
        count?: number;
        // Index of current page, start from 1
        page_number?: number;
        // Count of total pages
        page_total?: number;
        // Max count txs per page
        limit?: number;
        // List of txs in current page
        txs?: Array<TxResponse>;
    }

}

