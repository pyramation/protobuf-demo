// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace osmosis.gamm.v1beta1 {

    //=============================== Pool
    export interface QueryPoolRequest {
        poolId?: number;
    }

    export interface QueryPoolResponse {
        pool?: google.protobuf.Any;
    }

    //=============================== Pools
    export interface QueryPoolsRequest {
        // pagination defines an optional pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    export interface QueryPoolsResponse {
        pools?: Array<google.protobuf.Any>;
        // pagination defines the pagination in the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    //=============================== NumPools
    export interface QueryNumPoolsRequest {
    }

    export interface QueryNumPoolsResponse {
        numPools?: number;
    }

    //=============================== PoolParams
    export interface QueryPoolParamsRequest {
        poolId?: number;
    }

    export interface QueryPoolParamsResponse {
        params?: google.protobuf.Any;
    }

    //=============================== PoolLiquidity
    export interface QueryTotalPoolLiquidityRequest {
        poolId?: number;
    }

    export interface QueryTotalPoolLiquidityResponse {
        liquidity?: Array<cosmos.base.v1beta1.Coin>;
    }

    //=============================== TotalShares
    export interface QueryTotalSharesRequest {
        poolId?: number;
    }

    export interface QueryTotalSharesResponse {
        totalShares?: cosmos.base.v1beta1.Coin;
    }

    //=============================== SpotPrice
    export interface QuerySpotPriceRequest {
        poolId?: number;
        tokenInDenom?: string;
        tokenOutDenom?: string;
    }

    export interface QuerySpotPriceResponse {
        // String of the Dec. Ex) 10.203uatom
        spotPrice?: string;
    }

    //=============================== EstimateSwapExactAmountIn
    export interface QuerySwapExactAmountInRequest {
        sender?: string;
        poolId?: number;
        tokenIn?: string;
        routes?: Array<SwapAmountInRoute>;
    }

    export interface QuerySwapExactAmountInResponse {
        tokenOutAmount?: string;
    }

    //=============================== EstimateSwapExactAmountOut
    export interface QuerySwapExactAmountOutRequest {
        sender?: string;
        poolId?: number;
        routes?: Array<SwapAmountOutRoute>;
        tokenOut?: string;
    }

    export interface QuerySwapExactAmountOutResponse {
        tokenInAmount?: string;
    }

    export interface QueryTotalLiquidityRequest {
    }

    export interface QueryTotalLiquidityResponse {
        liquidity?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface QueryService {
        Pools: (r:QueryPoolsRequest) => QueryPoolsResponse;
        NumPools: (r:QueryNumPoolsRequest) => QueryNumPoolsResponse;
        TotalLiquidity: (r:QueryTotalLiquidityRequest) => QueryTotalLiquidityResponse;
        Pool: (r:QueryPoolRequest) => QueryPoolResponse;
        PoolParams: (r:QueryPoolParamsRequest) => QueryPoolParamsResponse;
        TotalPoolLiquidity: (r:QueryTotalPoolLiquidityRequest) => QueryTotalPoolLiquidityResponse;
        TotalShares: (r:QueryTotalSharesRequest) => QueryTotalSharesResponse;
        SpotPrice: (r:QuerySpotPriceRequest) => QuerySpotPriceResponse;
        EstimateSwapExactAmountIn: (r:QuerySwapExactAmountInRequest) => QuerySwapExactAmountInResponse;
        EstimateSwapExactAmountOut: (r:QuerySwapExactAmountOutRequest) => QuerySwapExactAmountOutResponse;
    }
}

