// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace osmosis.incentives {

    export interface ModuleToDistributeCoinsRequest {
    }

    export interface ModuleToDistributeCoinsResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface ModuleDistributedCoinsRequest {
    }

    export interface ModuleDistributedCoinsResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface GaugeByIDRequest {
        id?: number;
    }

    export interface GaugeByIDResponse {
        gauge?: Gauge;
    }

    export interface GaugesRequest {
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    export interface GaugesResponse {
        data?: Array<Gauge>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface ActiveGaugesRequest {
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    export interface ActiveGaugesResponse {
        data?: Array<Gauge>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface ActiveGaugesPerDenomRequest {
        denom?: string;
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    export interface ActiveGaugesPerDenomResponse {
        data?: Array<Gauge>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface UpcomingGaugesRequest {
        // pagination defines an pagination for the request.
        pagination?: cosmos.base.query.v1beta1.PageRequest;
    }

    export interface UpcomingGaugesResponse {
        data?: Array<Gauge>;
        // pagination defines an pagination for the response.
        pagination?: cosmos.base.query.v1beta1.PageResponse;
    }

    export interface RewardsEstRequest {
        owner?: string;
        lock_ids?: Array<number>;
        end_epoch?: number;
    }

    export interface RewardsEstResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface QueryLockableDurationsRequest {
    }

    export interface QueryLockableDurationsResponse {
        lockable_durations?: Array<google.protobuf.Duration>;
    }

    export interface QueryService {
        ModuleToDistributeCoins: (r:ModuleToDistributeCoinsRequest) => ModuleToDistributeCoinsResponse;
        ModuleDistributedCoins: (r:ModuleDistributedCoinsRequest) => ModuleDistributedCoinsResponse;
        GaugeByID: (r:GaugeByIDRequest) => GaugeByIDResponse;
        Gauges: (r:GaugesRequest) => GaugesResponse;
        ActiveGauges: (r:ActiveGaugesRequest) => ActiveGaugesResponse;
        ActiveGaugesPerDenom: (r:ActiveGaugesPerDenomRequest) => ActiveGaugesPerDenomResponse;
        UpcomingGauges: (r:UpcomingGaugesRequest) => UpcomingGaugesResponse;
        RewardsEst: (r:RewardsEstRequest) => RewardsEstResponse;
        LockableDurations: (r:QueryLockableDurationsRequest) => QueryLockableDurationsResponse;
    }
}

