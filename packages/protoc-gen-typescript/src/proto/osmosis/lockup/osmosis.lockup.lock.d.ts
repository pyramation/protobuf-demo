// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace osmosis.lockup {

    export enum LockQueryType {
        ByDuration = "ByDuration",
        ByTime = "ByTime",
    }
    // PeriodLock is a single unit of lock by period. It's a record of locked coin
    // at a specific time. It stores owner, duration, unlock time and the amount of
    // coins locked.
    export interface PeriodLock {
        ID?: number;
        owner?: string;
        duration?: google.protobuf.Duration;
        end_time?: google.protobuf.Timestamp;
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface QueryCondition {
        // type of lock query, ByLockDuration | ByLockTime
        lock_query_type?: LockQueryType;
        // What token denomination are we looking for lockups of
        denom?: string;
        // valid when query condition is ByDuration
        duration?: google.protobuf.Duration;
        // valid when query condition is ByTime
        timestamp?: google.protobuf.Timestamp;
    }

    // SyntheticLock is a single unit of synthetic lockup
    // TODO: Change this to have
    // * underlying_lock_id
    // * synthetic_coin
    // * end_time
    // * duration
    // * owner
    // We then index synthetic locks by the denom, just like we do with normal
    // locks. Ideally we even get an interface, so we can re-use that same logic.
    // I currently have no idea how reward distribution is supposed to be working...
    // EVENTUALLY
    // we make a "constrained_coin" field, which is what the current "coins" field
    // is. Constrained coin field can be a #post-v7 feature, since we aren't
    // allowing partial unlocks of synthetic lockups.
    export interface SyntheticLock {
        // underlying native lockup id for this synthetic lockup
        underlying_lock_id?: number;
        synth_denom?: string;
        // used for unbonding synthetic lockups, for active synthetic lockups, this
        // value is set to uninitialized value
        end_time?: google.protobuf.Timestamp;
        duration?: google.protobuf.Duration;
    }

}

