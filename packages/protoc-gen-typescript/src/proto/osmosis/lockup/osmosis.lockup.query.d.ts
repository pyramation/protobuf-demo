// Code generated by protoc-gen-tstypes. DO NOT EDIT.

declare namespace osmosis.lockup {

    export interface ModuleBalanceRequest {
    }

    export interface ModuleBalanceResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface ModuleLockedAmountRequest {
    }

    export interface ModuleLockedAmountResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface AccountUnlockableCoinsRequest {
        owner?: string;
    }

    export interface AccountUnlockableCoinsResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface AccountUnlockingCoinsRequest {
        owner?: string;
    }

    export interface AccountUnlockingCoinsResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface AccountLockedCoinsRequest {
        owner?: string;
    }

    export interface AccountLockedCoinsResponse {
        coins?: Array<cosmos.base.v1beta1.Coin>;
    }

    export interface AccountLockedPastTimeRequest {
        owner?: string;
        timestamp?: google.protobuf.Timestamp;
    }

    export interface AccountLockedPastTimeResponse {
        locks?: Array<PeriodLock>;
    }

    export interface AccountLockedPastTimeNotUnlockingOnlyRequest {
        owner?: string;
        timestamp?: google.protobuf.Timestamp;
    }

    export interface AccountLockedPastTimeNotUnlockingOnlyResponse {
        locks?: Array<PeriodLock>;
    }

    export interface AccountUnlockedBeforeTimeRequest {
        owner?: string;
        timestamp?: google.protobuf.Timestamp;
    }

    export interface AccountUnlockedBeforeTimeResponse {
        locks?: Array<PeriodLock>;
    }

    export interface AccountLockedPastTimeDenomRequest {
        owner?: string;
        timestamp?: google.protobuf.Timestamp;
        denom?: string;
    }

    export interface AccountLockedPastTimeDenomResponse {
        locks?: Array<PeriodLock>;
    }

    export interface LockedDenomRequest {
        denom?: string;
        duration?: google.protobuf.Duration;
    }

    export interface LockedDenomResponse {
        amount?: string;
    }

    export interface LockedRequest {
        lock_id?: number;
    }

    export interface LockedResponse {
        lock?: PeriodLock;
    }

    export interface SyntheticLockupsByLockupIDRequest {
        lock_id?: number;
    }

    export interface SyntheticLockupsByLockupIDResponse {
        synthetic_locks?: Array<SyntheticLock>;
    }

    export interface AccountLockedLongerDurationRequest {
        owner?: string;
        duration?: google.protobuf.Duration;
    }

    export interface AccountLockedLongerDurationResponse {
        locks?: Array<PeriodLock>;
    }

    export interface AccountLockedLongerDurationNotUnlockingOnlyRequest {
        owner?: string;
        duration?: google.protobuf.Duration;
    }

    export interface AccountLockedLongerDurationNotUnlockingOnlyResponse {
        locks?: Array<PeriodLock>;
    }

    export interface AccountLockedLongerDurationDenomRequest {
        owner?: string;
        duration?: google.protobuf.Duration;
        denom?: string;
    }

    export interface AccountLockedLongerDurationDenomResponse {
        locks?: Array<PeriodLock>;
    }

    export interface QueryService {
        ModuleBalance: (r:ModuleBalanceRequest) => ModuleBalanceResponse;
        ModuleLockedAmount: (r:ModuleLockedAmountRequest) => ModuleLockedAmountResponse;
        AccountUnlockableCoins: (r:AccountUnlockableCoinsRequest) => AccountUnlockableCoinsResponse;
        AccountUnlockingCoins: (r:AccountUnlockingCoinsRequest) => AccountUnlockingCoinsResponse;
        AccountLockedCoins: (r:AccountLockedCoinsRequest) => AccountLockedCoinsResponse;
        AccountLockedPastTime: (r:AccountLockedPastTimeRequest) => AccountLockedPastTimeResponse;
        AccountLockedPastTimeNotUnlockingOnly: (r:AccountLockedPastTimeNotUnlockingOnlyRequest) => AccountLockedPastTimeNotUnlockingOnlyResponse;
        AccountUnlockedBeforeTime: (r:AccountUnlockedBeforeTimeRequest) => AccountUnlockedBeforeTimeResponse;
        AccountLockedPastTimeDenom: (r:AccountLockedPastTimeDenomRequest) => AccountLockedPastTimeDenomResponse;
        LockedDenom: (r:LockedDenomRequest) => LockedDenomResponse;
        LockedByID: (r:LockedRequest) => LockedResponse;
        SyntheticLockupsByLockupID: (r:SyntheticLockupsByLockupIDRequest) => SyntheticLockupsByLockupIDResponse;
        AccountLockedLongerDuration: (r:AccountLockedLongerDurationRequest) => AccountLockedLongerDurationResponse;
        AccountLockedLongerDurationNotUnlockingOnly: (r:AccountLockedLongerDurationNotUnlockingOnlyRequest) => AccountLockedLongerDurationNotUnlockingOnlyResponse;
        AccountLockedLongerDurationDenom: (r:AccountLockedLongerDurationDenomRequest) => AccountLockedLongerDurationDenomResponse;
    }
}

