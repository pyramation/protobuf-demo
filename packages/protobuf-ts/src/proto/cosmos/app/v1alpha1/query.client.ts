// @generated by protobuf-ts 2.4.0,// @generated from protobuf file "cosmos/app/v1alpha1/query.proto" (package "cosmos.app.v1alpha1", syntax proto3),// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Query } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { QueryConfigResponse } from "./query";
import type { QueryConfigRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query is the app module query service.
 *
 * @generated from protobuf service cosmos.app.v1alpha1.Query
 */
export interface IQueryClient {
    /**
     * Config returns the current app config.
     *
     * @generated from protobuf rpc: Config(cosmos.app.v1alpha1.QueryConfigRequest) returns (cosmos.app.v1alpha1.QueryConfigResponse);
     */
    config(input: QueryConfigRequest, options?: RpcOptions): UnaryCall<QueryConfigRequest, QueryConfigResponse>;
}
/**
 * Query is the app module query service.
 *
 * @generated from protobuf service cosmos.app.v1alpha1.Query
 */
export class QueryClient implements IQueryClient, ServiceInfo {
    typeName = Query.typeName;
    methods = Query.methods;
    options = Query.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Config returns the current app config.
     *
     * @generated from protobuf rpc: Config(cosmos.app.v1alpha1.QueryConfigRequest) returns (cosmos.app.v1alpha1.QueryConfigResponse);
     */
    config(input: QueryConfigRequest, options?: RpcOptions): UnaryCall<QueryConfigRequest, QueryConfigResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryConfigRequest, QueryConfigResponse>("unary", this._transport, method, opt, input);
    }
}
