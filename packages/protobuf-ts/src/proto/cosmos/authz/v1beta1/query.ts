// @generated by protobuf-ts 2.4.0,// @generated from protobuf file "cosmos/authz/v1beta1/query.proto" (package "cosmos.authz.v1beta1", syntax proto3),// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GrantAuthorization } from "./authz";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { Grant } from "./authz";
import { PageRequest } from "../../base/query/v1beta1/pagination";
/**
 * QueryGrantsRequest is the request type for the Query/Grants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export interface QueryGrantsRequest {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
    /**
     * Optional, msg_type_url, when set, will query only grants matching given msg type.
     *
     * @generated from protobuf field: string msg_type_url = 3;
     */
    msgTypeUrl: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
     */
    pagination?: PageRequest;
}
/**
 * QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export interface QueryGrantsResponse {
    /**
     * authorizations is a list of grants granted for grantee by granter.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.Grant grants = 1;
     */
    grants: Grant[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export interface QueryGranterGrantsRequest {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export interface QueryGranterGrantsResponse {
    /**
     * grants is a list of grants granted by the granter.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
     */
    grants: GrantAuthorization[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export interface QueryGranteeGrantsRequest {
    /**
     * @generated from protobuf field: string grantee = 1;
     */
    grantee: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export interface QueryGranteeGrantsResponse {
    /**
     * grants is a list of grants granted to the grantee.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
     */
    grants: GrantAuthorization[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
// @generated message type with reflection information, may provide speed optimized methods
class QueryGrantsRequest$Type extends MessageType<QueryGrantsRequest> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGrantsRequest", [
            { no: 1, name: "granter", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "cosmos_proto.scalar": "cosmos.AddressString" } },
            { no: 2, name: "grantee", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "cosmos_proto.scalar": "cosmos.AddressString" } },
            { no: 3, name: "msg_type_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryGrantsRequest>): QueryGrantsRequest {
        const message = { granter: "", grantee: "", msgTypeUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGrantsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGrantsRequest): QueryGrantsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string granter */ 1:
                    message.granter = reader.string();
                    break;
                case /* string grantee */ 2:
                    message.grantee = reader.string();
                    break;
                case /* string msg_type_url */ 3:
                    message.msgTypeUrl = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 4:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string granter = 1; */
        if (message.granter !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.granter);
        /* string grantee = 2; */
        if (message.grantee !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.grantee);
        /* string msg_type_url = 3; */
        if (message.msgTypeUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.msgTypeUrl);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 4; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export const QueryGrantsRequest = new QueryGrantsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGrantsResponse$Type extends MessageType<QueryGrantsResponse> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGrantsResponse", [
            { no: 1, name: "grants", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Grant },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryGrantsResponse>): QueryGrantsResponse {
        const message = { grants: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGrantsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGrantsResponse): QueryGrantsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.authz.v1beta1.Grant grants */ 1:
                    message.grants.push(Grant.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.authz.v1beta1.Grant grants = 1; */
        for (let i = 0; i < message.grants.length; i++)
            Grant.internalBinaryWrite(message.grants[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export const QueryGrantsResponse = new QueryGrantsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGranterGrantsRequest$Type extends MessageType<QueryGranterGrantsRequest> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGranterGrantsRequest", [
            { no: 1, name: "granter", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "cosmos_proto.scalar": "cosmos.AddressString" } },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryGranterGrantsRequest>): QueryGranterGrantsRequest {
        const message = { granter: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGranterGrantsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranterGrantsRequest): QueryGranterGrantsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string granter */ 1:
                    message.granter = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGranterGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string granter = 1; */
        if (message.granter !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.granter);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export const QueryGranterGrantsRequest = new QueryGranterGrantsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGranterGrantsResponse$Type extends MessageType<QueryGranterGrantsResponse> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGranterGrantsResponse", [
            { no: 1, name: "grants", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GrantAuthorization },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryGranterGrantsResponse>): QueryGranterGrantsResponse {
        const message = { grants: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGranterGrantsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranterGrantsResponse): QueryGranterGrantsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.authz.v1beta1.GrantAuthorization grants */ 1:
                    message.grants.push(GrantAuthorization.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGranterGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1; */
        for (let i = 0; i < message.grants.length; i++)
            GrantAuthorization.internalBinaryWrite(message.grants[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export const QueryGranterGrantsResponse = new QueryGranterGrantsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGranteeGrantsRequest$Type extends MessageType<QueryGranteeGrantsRequest> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGranteeGrantsRequest", [
            { no: 1, name: "grantee", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "cosmos_proto.scalar": "cosmos.AddressString" } },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryGranteeGrantsRequest>): QueryGranteeGrantsRequest {
        const message = { grantee: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGranteeGrantsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranteeGrantsRequest): QueryGranteeGrantsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string grantee */ 1:
                    message.grantee = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGranteeGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string grantee = 1; */
        if (message.grantee !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.grantee);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export const QueryGranteeGrantsRequest = new QueryGranteeGrantsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryGranteeGrantsResponse$Type extends MessageType<QueryGranteeGrantsResponse> {
    constructor() {
        super("cosmos.authz.v1beta1.QueryGranteeGrantsResponse", [
            { no: 1, name: "grants", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GrantAuthorization },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryGranteeGrantsResponse>): QueryGranteeGrantsResponse {
        const message = { grants: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryGranteeGrantsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranteeGrantsResponse): QueryGranteeGrantsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.authz.v1beta1.GrantAuthorization grants */ 1:
                    message.grants.push(GrantAuthorization.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryGranteeGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1; */
        for (let i = 0; i < message.grants.length; i++)
            GrantAuthorization.internalBinaryWrite(message.grants[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export const QueryGranteeGrantsResponse = new QueryGranteeGrantsResponse$Type();
/**
 * @generated ServiceType for protobuf service cosmos.authz.v1beta1.Query
 */
export const Query = new ServiceType("cosmos.authz.v1beta1.Query", [
    { name: "Grants", options: { "google.api.http": { get: "/cosmos/authz/v1beta1/grants" } }, I: QueryGrantsRequest, O: QueryGrantsResponse },
    { name: "GranterGrants", options: { "google.api.http": { get: "/cosmos/authz/v1beta1/grants/granter/{granter}" } }, I: QueryGranterGrantsRequest, O: QueryGranterGrantsResponse },
    { name: "GranteeGrants", options: { "google.api.http": { get: "/cosmos/authz/v1beta1/grants/grantee/{grantee}" } }, I: QueryGranteeGrantsRequest, O: QueryGranteeGrantsResponse }
]);
