// @generated by protobuf-ts 2.4.0,// @generated from protobuf file "osmosis/epochs/query.proto" (package "osmosis.epochs.v1beta1", syntax proto3),// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Query } from "./query";
import type { QueryCurrentEpochResponse } from "./query";
import type { QueryCurrentEpochRequest } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { QueryEpochsInfoResponse } from "./query";
import type { QueryEpochsInfoRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service osmosis.epochs.v1beta1.Query
 */
export interface IQueryClient {
    /**
     * EpochInfos provide running epochInfos
     *
     * @generated from protobuf rpc: EpochInfos(osmosis.epochs.v1beta1.QueryEpochsInfoRequest) returns (osmosis.epochs.v1beta1.QueryEpochsInfoResponse);
     */
    epochInfos(input: QueryEpochsInfoRequest, options?: RpcOptions): UnaryCall<QueryEpochsInfoRequest, QueryEpochsInfoResponse>;
    /**
     * CurrentEpoch provide current epoch of specified identifier
     *
     * @generated from protobuf rpc: CurrentEpoch(osmosis.epochs.v1beta1.QueryCurrentEpochRequest) returns (osmosis.epochs.v1beta1.QueryCurrentEpochResponse);
     */
    currentEpoch(input: QueryCurrentEpochRequest, options?: RpcOptions): UnaryCall<QueryCurrentEpochRequest, QueryCurrentEpochResponse>;
}
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service osmosis.epochs.v1beta1.Query
 */
export class QueryClient implements IQueryClient, ServiceInfo {
    typeName = Query.typeName;
    methods = Query.methods;
    options = Query.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * EpochInfos provide running epochInfos
     *
     * @generated from protobuf rpc: EpochInfos(osmosis.epochs.v1beta1.QueryEpochsInfoRequest) returns (osmosis.epochs.v1beta1.QueryEpochsInfoResponse);
     */
    epochInfos(input: QueryEpochsInfoRequest, options?: RpcOptions): UnaryCall<QueryEpochsInfoRequest, QueryEpochsInfoResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryEpochsInfoRequest, QueryEpochsInfoResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * CurrentEpoch provide current epoch of specified identifier
     *
     * @generated from protobuf rpc: CurrentEpoch(osmosis.epochs.v1beta1.QueryCurrentEpochRequest) returns (osmosis.epochs.v1beta1.QueryCurrentEpochResponse);
     */
    currentEpoch(input: QueryCurrentEpochRequest, options?: RpcOptions): UnaryCall<QueryCurrentEpochRequest, QueryCurrentEpochResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<QueryCurrentEpochRequest, QueryCurrentEpochResponse>("unary", this._transport, method, opt, input);
    }
}
