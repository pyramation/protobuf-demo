// @generated by protobuf-ts 2.4.0,// @generated from protobuf file "osmosis/lockup/tx.proto" (package "osmosis.lockup", syntax proto3),// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Msg } from "./tx";
import type { MsgBeginUnlockingResponse } from "./tx";
import type { MsgBeginUnlocking } from "./tx";
import type { MsgBeginUnlockingAllResponse } from "./tx";
import type { MsgBeginUnlockingAll } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MsgLockTokensResponse } from "./tx";
import type { MsgLockTokens } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service osmosis.lockup.Msg
 */
export interface IMsgClient {
    /**
     * LockTokens lock tokens
     *
     * @generated from protobuf rpc: LockTokens(osmosis.lockup.MsgLockTokens) returns (osmosis.lockup.MsgLockTokensResponse);
     */
    lockTokens(input: MsgLockTokens, options?: RpcOptions): UnaryCall<MsgLockTokens, MsgLockTokensResponse>;
    /**
     * BeginUnlockingAll begin unlocking all tokens
     *
     * @generated from protobuf rpc: BeginUnlockingAll(osmosis.lockup.MsgBeginUnlockingAll) returns (osmosis.lockup.MsgBeginUnlockingAllResponse);
     */
    beginUnlockingAll(input: MsgBeginUnlockingAll, options?: RpcOptions): UnaryCall<MsgBeginUnlockingAll, MsgBeginUnlockingAllResponse>;
    /**
     * MsgBeginUnlocking begins unlocking tokens by lock ID
     *
     * @generated from protobuf rpc: BeginUnlocking(osmosis.lockup.MsgBeginUnlocking) returns (osmosis.lockup.MsgBeginUnlockingResponse);
     */
    beginUnlocking(input: MsgBeginUnlocking, options?: RpcOptions): UnaryCall<MsgBeginUnlocking, MsgBeginUnlockingResponse>;
}
/**
 * Msg defines the Msg service.
 *
 * @generated from protobuf service osmosis.lockup.Msg
 */
export class MsgClient implements IMsgClient, ServiceInfo {
    typeName = Msg.typeName;
    methods = Msg.methods;
    options = Msg.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * LockTokens lock tokens
     *
     * @generated from protobuf rpc: LockTokens(osmosis.lockup.MsgLockTokens) returns (osmosis.lockup.MsgLockTokensResponse);
     */
    lockTokens(input: MsgLockTokens, options?: RpcOptions): UnaryCall<MsgLockTokens, MsgLockTokensResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgLockTokens, MsgLockTokensResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * BeginUnlockingAll begin unlocking all tokens
     *
     * @generated from protobuf rpc: BeginUnlockingAll(osmosis.lockup.MsgBeginUnlockingAll) returns (osmosis.lockup.MsgBeginUnlockingAllResponse);
     */
    beginUnlockingAll(input: MsgBeginUnlockingAll, options?: RpcOptions): UnaryCall<MsgBeginUnlockingAll, MsgBeginUnlockingAllResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgBeginUnlockingAll, MsgBeginUnlockingAllResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * MsgBeginUnlocking begins unlocking tokens by lock ID
     *
     * @generated from protobuf rpc: BeginUnlocking(osmosis.lockup.MsgBeginUnlocking) returns (osmosis.lockup.MsgBeginUnlockingResponse);
     */
    beginUnlocking(input: MsgBeginUnlocking, options?: RpcOptions): UnaryCall<MsgBeginUnlocking, MsgBeginUnlockingResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgBeginUnlocking, MsgBeginUnlockingResponse>("unary", this._transport, method, opt, input);
    }
}
