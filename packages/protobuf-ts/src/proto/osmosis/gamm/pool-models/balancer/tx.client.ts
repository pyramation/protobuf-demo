// @generated by protobuf-ts 2.4.0,// @generated from protobuf file "osmosis/gamm/pool-models/balancer/tx.proto" (package "osmosis.gamm.v1beta1", syntax proto3),// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Msg } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MsgCreateBalancerPoolResponse } from "./tx";
import type { MsgCreateBalancerPool } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service osmosis.gamm.v1beta1.Msg
 */
export interface IMsgClient {
    /**
     * @generated from protobuf rpc: CreateBalancerPool(osmosis.gamm.v1beta1.MsgCreateBalancerPool) returns (osmosis.gamm.v1beta1.MsgCreateBalancerPoolResponse);
     */
    createBalancerPool(input: MsgCreateBalancerPool, options?: RpcOptions): UnaryCall<MsgCreateBalancerPool, MsgCreateBalancerPoolResponse>;
}
/**
 * @generated from protobuf service osmosis.gamm.v1beta1.Msg
 */
export class MsgClient implements IMsgClient, ServiceInfo {
    typeName = Msg.typeName;
    methods = Msg.methods;
    options = Msg.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateBalancerPool(osmosis.gamm.v1beta1.MsgCreateBalancerPool) returns (osmosis.gamm.v1beta1.MsgCreateBalancerPoolResponse);
     */
    createBalancerPool(input: MsgCreateBalancerPool, options?: RpcOptions): UnaryCall<MsgCreateBalancerPool, MsgCreateBalancerPoolResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgCreateBalancerPool, MsgCreateBalancerPoolResponse>("unary", this._transport, method, opt, input);
    }
}
